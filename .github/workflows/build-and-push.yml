# In .github/workflows/build-and-push.yml

name: 'CI: Build, Push, and Deploy Trigger'

on:
  push:
    branches:
      - main

jobs:
  build-push-trigger:
    name: 'Build, Push and Trigger Argo CD'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Application Repo
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          
        # --- Build --
        
      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '11'
      
      - name: Make mvnw executable
        run: chmod +x mvnw
  
      - name: Build JAR with Maven
        run: ./mvnw -Dmaven.test.skip=true clean package
        
      - name: Get JAR filename
        id: get_jar
        run: echo "JAR_FILE=$(ls target/*.jar | grep -v 'original' | head -n 1 | xargs -n 1 basename)" >> $GITHUB_ENV
  
      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          # use version and the short Git SHA as the unique image tag
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/aws-argocd-explore:2.0-${{ github.sha }}
          build-args: |
            JAR_FILE=${{ env.JAR_FILE }}

        # --- triggers Argo CD ---

      - name: Checkout GitOps Repo
        uses: actions/checkout@v4
        with:
          # repo that contain argo cd manifest
          repository: GreatSoravit/aws-argocd-explore

          # Use the PAT to get push access
          token: ${{ secrets.GITOPS_REPO_TOKEN }}

          path: .

      - name: Update Kubernetes manifest
        run: |
          NEW_IMAGE="${{ secrets.DOCKERHUB_USERNAME }}/aws-argocd-explore:2.0-${{ github.sha }}"
          MANIFEST_FILE="webapp/deployment.yaml"
          
          # Use sed to find and replace the image tag in the deployment file
          sed -i 's|image: .*|$NEW_IMAGE|g' $MANIFEST_FILE

      - name: Commit and push changes
        run: |
          git config --global user.name "GitHub Actions Bot"
          git config --global user.email "actions-bot@github.com"
          git add deployment.yaml
          # Commit only if there are changes
          git diff --staged --quiet || git commit -m "Update image tag to ${{ github.sha }}"
          git push